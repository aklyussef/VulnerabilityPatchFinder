import git
import re

class GitHelper:

    def __init__(self,repoURL):
        self.repoURL = repoURL
        self.regex = 'CVE-[0-9]+-[0-9]+'
        self.p = re.compile(self.regex)
        # self.repo = Repo(self.repoURL)
        # assert not self.repo.bare

    def cloneRepo(self,dir):
        # repo = git.Repo.clone_from(self.repoURL, os.path.join(dir, 'repo'), branch='master')
        self.repo = git.Repo.clone_from(self.repoURL,dir)
        return

    # TODO: only getting the commit at HEAD in result, debug to fix issue
    def findFixCommits(self):
        result_list = []
        # loop head through all commits in branch
        # if message matches 'CVE-[0-9]+-[0-9]+'
        # Add commit,repo.head.commit.hexsha,matched CVE string to result list & return after done all branches
        for branch in self.repo.branches:
            for commit in self.repo.iter_commits(branch):
                if (self.p.search(commit.message) is not None):
                    result_list.append([self.repoURL,commit.hexsha,self.p.search(self.repo.head.commit.message).group(0)])
        return result_list


def main():
    print("Welcome to GitHelper Main")
    testURL = r'https://github.com/aklyussef/VulnerableRepoTest.git'
    localRepoPath = r'/Users/aklyussef/Projects/Python/EventAutomator'
    gHelper = GitHelper(testURL)
    gHelper.cloneRepo(r'/Users/aklyussef/Projects/Python/VulnerabilityPatchFinder/aklyussef-VulnerableRepoTest')

    # repo = Repo(testURL)
    print("It doesn't break!")

if __name__ == '__main__':
    main()