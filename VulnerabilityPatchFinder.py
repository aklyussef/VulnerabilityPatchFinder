import sys
from IOHelper import IOHelper
from GitHelper import GitHelper


def main():

    if (len(sys.argv) != 2):
        print("USAGE: {} path/to/git/repo/file/toscan".format(sys.argv[0].split('/')[-1]))
        return

    IOhelper = IOHelper()

    repoList = IOhelper.getreposfromFile(sys.argv[1])
    IOhelper.createOutputDirectory()
    IOhelper.writeOutputHeader()

    for repoURL in repoList:
        print("Scanning repo {}".format(repoURL))
        gitHelper = GitHelper(repoURL)
        if(not gitHelper.isgitRepo(IOhelper.gerDirName(repoURL))):
            gitHelper.cloneRepo(IOhelper.createRepoDirectory(repoURL))
        else:
            # force fetch all from repo to ensure working with latest
            gitHelper.fetch_all()
        #TODO: explore if possible to pass function handle to output publisher
        #TODO: to be able to write finding as it is found?
        IOhelper.writeRepoFinds(gitHelper.findFixCommits())
    IOhelper.free_resources()


if __name__ == '__main__':
    main()