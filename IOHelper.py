import os
import shutil

class IOHelper:

    def __init__(self):
        self.dir = os.getcwd()
        self.outdir = ""

    def getreposfromFile(self,filepath):
        repolist = []
        if ( not os.path.exists(filepath)):
            print("File {} doesn't exist".format(filepath))
            exit(1)
        file = open(filepath,'r')
        filelines = file.readlines()
        for line in filelines:
            if(line.startswith('http') and line.endswith('.git')):
                repolist.append(line)
        file.close()
        return repolist

    def getCurrentDirectory(self):
        return self.dir

    def createRepoDirectory(self, repoURL):
        #create dir for repo
        #get url after https://github.com/
        i = 0
        urlParts = repoURL.split('/')
        self.projectName = ('-').join(urlParts[3:])
        self.projectName = self.projectName.split('.')[0]
        outdir = os.path.join(self.dir,self.projectName)
        if((os.path.exists(outdir))):
            shutil.rmtree(outdir)
        os.makedirs(outdir)
        return outdir

    def createOutputDirectory(self):
        self.outdir = os.path.join(self.dir,"output")
        if (not (os.path.exists(self.outdir))):
            os.makedirs(self.outdir)
        return self.outdir

    def writeOutputHeader(self):
        self.createOutputDirectory()
        outfilePath = os.path.join(self.outdir,"scan_summary.csv")
        if( os.path.exists(outfilePath)):
            os.remove(outfilePath)
        self.outfile = open(outfilePath,'w+')
        self.outfile.write("Project Name, Repository, Commit ID, CVE ID, CVE Details\n")
        return

    def writeRepoFinds(self, resultList):
        if(len(resultList) == 0):
            return
        for cell in resultList:
            self.outfile.write("{},{},{},{},,\n".format(
                self.projectName,cell[0],cell[1],cell[2]))
        return

    def free_resources(self):
        self.outfile.close()


def main():
    print("Welcome to IOHelper Main")
    m = IOHelper()
    print(m.createRepoDirectory(m.getCurrentDirectory(), r'https://github.com/aklyussef/VulnerableRepoTest.git'))

if __name__ == '__main__':
    main()